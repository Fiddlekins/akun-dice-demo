{"version":3,"sources":["App.module.css","History.module.css","Input.module.css","History.jsx","Input.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","History","items","className","styles","history","map","item","itemIndex","key","length","roll","dangerouslySetInnerHTML","__html","initialState","textarea","reducer","state","field","value","Input","submit","chatInputRef","useRef","useReducer","dispatch","trySubmit","body","current","useEffect","style","height","scrollHeight","chatInput","onSubmit","e","preventDefault","ref","name","placeholder","rows","onKeyDown","altKey","shiftKey","ctrlKey","onChange","target","App","useState","rolls","setRolls","content","title","description","href","startsWith","evaluateAkunDice","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,mBAAmB,YAAc,2B,mBCA1FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,wB,iBCA5DD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,0B,4MCEnD,SAASC,EAAT,GAA2B,IAATC,EAAQ,EAARA,MAChC,OACC,yBAAKC,UAAWC,IAAOC,SAAvB,OACEH,QADF,IACEA,OADF,EACEA,EAAOI,KAAI,SAACC,EAAMC,GAClB,OAAO,yBACNC,IAAKP,EAAMQ,OAASF,EACpBL,UAAWC,IAAOO,KAClBC,wBAAyB,CAACC,OAAQN,S,kCCPjCO,EAAe,CACpBC,SAAU,aAGX,SAASC,EAAQC,EAAjB,GAAyC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MAC/B,OAAO,2BACHF,GADJ,kBAEEC,EAAQC,IAII,SAASC,EAAT,GAA0B,IAAVC,EAAS,EAATA,OACxBC,EAAeC,iBAAO,MADW,EAGbC,qBAAWR,EAASF,GAHP,mBAGhCG,EAHgC,KAGzBQ,EAHyB,KAKjCC,EAAY,WACjB,IAAMC,EAAOL,EAAaM,QAAQT,MAC9BQ,EAAKjB,OAAS,IACjBe,EAAS,CAACP,MAAO,aACjBG,EAAOM,KA2BT,OAPAE,qBAAU,WACT,IAAMd,EAAWO,EAAaM,QAC9Bb,EAASe,MAAMC,OAAS,UAExBhB,EAASe,MAAMC,OAAf,UAA2BhB,EAASiB,aAAe,EAAnD,SAIA,0BAAM7B,UAAWC,IAAO6B,UAAWC,SAxBnB,SAACC,GACjBA,EAAEC,iBACFV,MAuBC,8BACCW,IAAKf,EACLnB,UAAWC,IAAOW,SAClBuB,KAAK,WACLnB,MAAOF,EAAMF,SACbwB,YAAY,YACZC,KAAK,IACLC,UA3Be,SAACN,GACJ,UAAVA,EAAE1B,KAAoB0B,EAAEO,QAAWP,EAAEQ,UAAaR,EAAES,UACvDT,EAAEC,iBACFV,MAyBCmB,SArBc,SAACV,GACjBV,EAAS,CAACP,MAAOiB,EAAEW,OAAOR,KAAMnB,MAAOgB,EAAEW,OAAO3B,YClCnC,SAAS4B,IAAO,IAAD,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,KAU7B,OACC,yBAAK/C,UAAWC,IAAO+C,SACtB,wBAAIhD,UAAWC,IAAOgD,OAAtB,kBACA,yBAAKjD,UAAWC,IAAOiD,aACtB,iGACA,uBAAGC,KAAK,wBAAR,gBACA,4FAED,yBAAKnD,UAAWC,IAAOiD,aACtB,6FACA,uBAAGC,KAAK,qEAAR,QACA,oCAED,kBAAClC,EAAD,CAAOC,OApBa,SAACM,GACtB,GAAIA,EAAK4B,WAAW,WAAa5B,EAAK4B,WAAW,UAAW,CAC3D,IAAM5C,EAAO6C,IAAiB7B,GAC9BuB,EAAS,CAACvC,GAAF,mBAAWsC,SAkBnB,kBAAChD,EAAD,CAASC,MAAO+C,KClBCQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACjB,EAAD,OAEFkB,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d439f702.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__1GsvH\",\"title\":\"App_title__1uRW_\",\"description\":\"App_description__U7H2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"History_history__15f_R\",\"roll\":\"History_roll__71G23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatInput\":\"Input_chatInput__3uJKP\",\"textarea\":\"Input_textarea__A_JCw\"};","import React from 'react';\r\nimport styles from './History.module.css';\r\n\r\nexport default function History({items}) {\r\n\treturn (\r\n\t\t<div className={styles.history}>\r\n\t\t\t{items?.map((item, itemIndex) => {\r\n\t\t\t\treturn <div\r\n\t\t\t\t\tkey={items.length - itemIndex}\r\n\t\t\t\t\tclassName={styles.roll}\r\n\t\t\t\t\tdangerouslySetInnerHTML={{__html: item}}/>\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, {useEffect, useReducer, useRef} from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nconst initialState = {\r\n\ttextarea: '/dice 1d6'\r\n};\r\n\r\nfunction reducer(state, {field, value}) {\r\n\treturn {\r\n\t\t...state,\r\n\t\t[field]: value\r\n\t};\r\n}\r\n\r\nexport default function Input({submit}) {\r\n\tconst chatInputRef = useRef(null);\r\n\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n\tconst trySubmit = () => {\r\n\t\tconst body = chatInputRef.current.value;\r\n\t\tif (body.length > 0) {\r\n\t\t\tdispatch({field: 'textarea'});\r\n\t\t\tsubmit(body);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\ttrySubmit();\r\n\t};\r\n\r\n\tconst onKeyDown = (e) => {\r\n\t\tif (e.key === 'Enter' && !e.altKey && !e.shiftKey && !e.ctrlKey) {\r\n\t\t\te.preventDefault();\r\n\t\t\ttrySubmit();\r\n\t\t}\r\n\t};\r\n\r\n\tconst onChange = (e) => {\r\n\t\tdispatch({field: e.target.name, value: e.target.value});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst textarea = chatInputRef.current;\r\n\t\ttextarea.style.height = 'inherit';\r\n\t\t// Why +2 ? Because without it the scrollbar is always visible\r\n\t\ttextarea.style.height = `${textarea.scrollHeight + 2}px`;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<form className={styles.chatInput} onSubmit={onSubmit}>\r\n\t\t\t<textarea\r\n\t\t\t\tref={chatInputRef}\r\n\t\t\t\tclassName={styles.textarea}\r\n\t\t\t\tname=\"textarea\"\r\n\t\t\t\tvalue={state.textarea}\r\n\t\t\t\tplaceholder=\"/dice 1d6\"\r\n\t\t\t\trows=\"1\"\r\n\t\t\t\tonKeyDown={onKeyDown}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t{/*<button type=\"submit\">Submit</button>*/}\r\n\t\t</form>\r\n\t);\r\n}\r\n","import evaluateAkunDice from 'akun-dice';\nimport React, {useState} from 'react';\nimport styles from './App.module.css';\nimport History from './History.jsx';\nimport Input from './Input.jsx';\n\nexport default function App() {\n\tconst [rolls, setRolls] = useState([]);\n\n\tconst onInputSubmit = (body) => {\n\t\tif (body.startsWith('/dice ') || body.startsWith('/roll ')) {\n\t\t\tconst roll = evaluateAkunDice(body);\n\t\t\tsetRolls([roll, ...rolls]);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={styles.content}>\n\t\t\t<h1 className={styles.title}>Akun Dice Demo</h1>\n\t\t\t<div className={styles.description}>\n\t\t\t\t<span>This site uses the same code to evaluate dice roll commands as </span>\n\t\t\t\t<a href=\"https://fiction.live\">fiction.live</a>\n\t\t\t\t<span> which makes it the perfect place to test your rolls out!</span>\n\t\t\t</div>\n\t\t\t<div className={styles.description}>\n\t\t\t\t<span>Instruction on how to configure dice commands can be found </span>\n\t\t\t\t<a href=\"https://fiction.live/stories/Dice-Documentation/22nAnHSMgSBdLYZ7G\">here</a>\n\t\t\t\t<span>.</span>\n\t\t\t</div>\n\t\t\t<Input submit={onInputSubmit}/>\n\t\t\t<History items={rolls}/>\n\t\t</div>\n\t);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}